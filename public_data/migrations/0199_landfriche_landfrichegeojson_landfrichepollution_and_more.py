# Generated by Django 4.2.20 on 2025-06-23 08:54

from django.db import migrations, models
import django


class Migration(migrations.Migration):
    dependencies = [
        ("public_data", "0198_artifzonageindex_landartifstock_and_more"),
    ]

    operations = [
        migrations.DeleteModel(
            name="ZoneUrba",
        ),
        migrations.CreateModel(
            name="LandFriche",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("site_id", models.CharField(max_length=255)),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("land_name", models.CharField()),
                (
                    "friche_sol_pollution",
                    models.CharField(
                        choices=[
                            ("pollution peu probable", "Pollution Peu Probable"),
                            ("pollution avérée", "Pollution Averee"),
                            ("pollution probable", "Pollution Probable"),
                            ("pollution traitée", "Pollution Traitee"),
                            ("pollution inexistante", "Pollution Inexistante"),
                            ("pollution supposée", "Pollution Supposee"),
                            ("inconnu", "Inconnu"),
                        ]
                    ),
                ),
                (
                    "friche_statut",
                    models.CharField(
                        choices=[
                            ("friche reconvertie", "Friche Reconvertie"),
                            ("friche avec projet", "Friche Avec Projet"),
                            ("friche sans projet", "Friche Sans Projet"),
                        ]
                    ),
                ),
                ("friche_is_in_zone_activite", models.BooleanField()),
                (
                    "friche_zonage_environnemental",
                    models.CharField(
                        choices=[
                            ("proximite_zone (reserves_naturelles)", "Proximite Zone Reserve Naturelle"),
                            ("reserve_naturelle", "Reserve Naturelle"),
                            ("natura_2000", "Natura 2000"),
                            ("hors zone", "Hors Zone"),
                            ("znieff", "Znieff"),
                            ("proximite_zone (znieff)", "Proximite Zone Znieff"),
                            ("proximite_zone (natura_2000)", "Proximite Zone Natura 2000"),
                        ]
                    ),
                ),
                (
                    "friche_type_zone",
                    models.CharField(
                        choices=[
                            ("N", "Naturel"),
                            ("U", "Urbain"),
                            ("A", "Agricole"),
                            ("AU", "A Urbaniser"),
                            ("ZC", "Zone Constructible"),
                            ("ZCa", "Zone Constructible Pour Activite"),
                            ("ZnC", "Zone Non Constructible"),
                        ]
                    ),
                ),
                (
                    "friche_type",
                    models.CharField(
                        choices=[
                            ("friche logistique", "Friche Logistique"),
                            ("friche touristique", "Friche Touristique"),
                            ("friche hospitalière", "Friche Hospitaliere"),
                            ("friche ferroviaire", "Friche Ferroviaire"),
                            ("autre", "Autre"),
                            ("mixte", "Mixte"),
                            ("friche enseignement", "Friche Enseignement"),
                            ("friche cultuelle", "Friche Culturelle"),
                            ("inconnu", "Inconnu"),
                            ("friche portuaire", "Friche Portuaire"),
                            ("friche carrière ou mine", "Friche Carriere Mine"),
                            ("friche aéroportuaire", "Friche Aeroportuaire"),
                            ("friche d'habitat", "Friche Habitat"),
                            ("friche d'équipement public", "Friche Equipment Public"),
                            ("friche loisir tourisme hôtellerie", "Friche Loisir Tourisme Hotellerie"),
                            ("friche agro-industrielle", "Friche Agro Industrielle"),
                            ("friche industrielle", "Friche Industrielle"),
                            ("friche commerciale", "Friche Commerciale"),
                            ("friche militaire", "Friche Militaire"),
                        ]
                    ),
                ),
                (
                    "friche_surface_percentile_rank",
                    models.FloatField(choices=[(1, "25th"), (2, "50th"), (3, "75th"), (4, "100th")]),
                ),
                ("surface", models.FloatField()),
                ("point_on_surface", django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                "db_table": "public_data_landfriche",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandFricheGeojson",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                ("land_type", models.CharField()),
                ("land_name", models.CharField()),
                ("geojson_feature_collection", models.JSONField()),
            ],
            options={
                "db_table": "public_data_landfrichegeojson",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandFrichePollution",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("friche_count", models.IntegerField()),
                ("friche_surface", models.FloatField()),
                (
                    "friche_sol_pollution",
                    models.CharField(
                        choices=[
                            ("pollution peu probable", "Pollution Peu Probable"),
                            ("pollution avérée", "Pollution Averee"),
                            ("pollution probable", "Pollution Probable"),
                            ("pollution traitée", "Pollution Traitee"),
                            ("pollution inexistante", "Pollution Inexistante"),
                            ("pollution supposée", "Pollution Supposee"),
                            ("inconnu", "Inconnu"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
            options={
                "db_table": "public_data_landfrichepollution",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandFricheStatut",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("friche_count", models.IntegerField()),
                ("friche_surface", models.FloatField()),
                (
                    "friche_statut",
                    models.CharField(
                        choices=[
                            ("friche reconvertie", "Friche Reconvertie"),
                            ("friche avec projet", "Friche Avec Projet"),
                            ("friche sans projet", "Friche Sans Projet"),
                        ]
                    ),
                ),
            ],
            options={
                "db_table": "public_data_landfrichestatut",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandFricheSurfaceRank",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("friche_count", models.IntegerField()),
                ("friche_surface", models.FloatField()),
                (
                    "friche_surface_percentile_rank",
                    models.IntegerField(choices=[(1, "25th"), (2, "50th"), (3, "75th"), (4, "100th")]),
                ),
                ("rank_max_surface", models.FloatField()),
                ("rank_min_surface", models.FloatField()),
            ],
            options={
                "db_table": "public_data_landfrichesurfacerank",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandFricheType",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("friche_count", models.IntegerField()),
                ("friche_surface", models.FloatField()),
                (
                    "friche_type",
                    models.CharField(
                        choices=[
                            ("friche logistique", "Friche Logistique"),
                            ("friche touristique", "Friche Touristique"),
                            ("friche hospitalière", "Friche Hospitaliere"),
                            ("friche ferroviaire", "Friche Ferroviaire"),
                            ("autre", "Autre"),
                            ("mixte", "Mixte"),
                            ("friche enseignement", "Friche Enseignement"),
                            ("friche cultuelle", "Friche Culturelle"),
                            ("inconnu", "Inconnu"),
                            ("friche portuaire", "Friche Portuaire"),
                            ("friche carrière ou mine", "Friche Carriere Mine"),
                            ("friche aéroportuaire", "Friche Aeroportuaire"),
                            ("friche d'habitat", "Friche Habitat"),
                            ("friche d'équipement public", "Friche Equipment Public"),
                            ("friche loisir tourisme hôtellerie", "Friche Loisir Tourisme Hotellerie"),
                            ("friche agro-industrielle", "Friche Agro Industrielle"),
                            ("friche industrielle", "Friche Industrielle"),
                            ("friche commerciale", "Friche Commerciale"),
                            ("friche militaire", "Friche Militaire"),
                        ],
                        max_length=100,
                    ),
                ),
            ],
            options={
                "db_table": "public_data_landfrichetype",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandFricheZonageEnvironnementale",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("friche_count", models.IntegerField()),
                ("friche_surface", models.FloatField()),
                (
                    "friche_zonage_environnemental",
                    models.CharField(
                        choices=[
                            ("proximite_zone (reserves_naturelles)", "Proximite Zone Reserve Naturelle"),
                            ("reserve_naturelle", "Reserve Naturelle"),
                            ("natura_2000", "Natura 2000"),
                            ("hors zone", "Hors Zone"),
                            ("znieff", "Znieff"),
                            ("proximite_zone (znieff)", "Proximite Zone Znieff"),
                            ("proximite_zone (natura_2000)", "Proximite Zone Natura 2000"),
                        ]
                    ),
                ),
            ],
            options={
                "db_table": "public_data_landfrichezonageenvironnementale",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandFricheZonageType",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("friche_count", models.IntegerField()),
                ("friche_surface", models.FloatField()),
                (
                    "friche_type_zone",
                    models.CharField(
                        choices=[
                            ("N", "Naturel"),
                            ("U", "Urbain"),
                            ("A", "Agricole"),
                            ("AU", "A Urbaniser"),
                            ("ZC", "Zone Constructible"),
                            ("ZCa", "Zone Constructible Pour Activite"),
                            ("ZnC", "Zone Non Constructible"),
                        ]
                    ),
                ),
            ],
            options={
                "db_table": "public_data_landfrichezonagetype",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandFricheZoneActivite",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("friche_count", models.IntegerField()),
                ("friche_surface", models.FloatField()),
                ("friche_is_in_zone_activite", models.BooleanField()),
            ],
            options={
                "db_table": "public_data_landfrichezoneactivite",
                "managed": False,
            },
        ),
    ]
