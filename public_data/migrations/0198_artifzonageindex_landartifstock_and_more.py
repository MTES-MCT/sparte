# Generated by Django 4.2.20 on 2025-05-15 12:02

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("public_data", "0197_delete_artificialarea_delete_landpopcomparison_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ArtifZonageIndex",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("departements", django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), size=None)),
                ("years", django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ("zonage_surface", models.FloatField()),
                ("artificial_surface", models.FloatField()),
                ("zonage_type", models.CharField()),
                ("zonage_count", models.IntegerField()),
                ("artificial_percent", models.FloatField()),
                ("millesime_index", models.IntegerField()),
            ],
            options={
                "db_table": "public_data_artifzonageindex",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandArtifStock",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("departement", models.CharField()),
                ("year", models.IntegerField()),
                ("surface", models.FloatField()),
                ("percent", models.FloatField()),
                ("millesime_index", models.IntegerField()),
                ("flux_surface", models.FloatField()),
                ("flux_percent", models.FloatField()),
                ("flux_previous_year", models.IntegerField()),
            ],
            options={
                "db_table": "public_data_landartifstock",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandArtifStockCouvertureComposition",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("departement", models.CharField()),
                ("year", models.IntegerField()),
                ("percent_of_land", models.FloatField()),
                ("surface", models.FloatField()),
                ("percent_of_artif", models.FloatField()),
                ("millesime_index", models.IntegerField()),
                ("color", models.CharField()),
                ("label", models.CharField()),
                ("label_short", models.CharField()),
                ("couverture", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "public_data_landartifstockcouverturecomposition",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandArtifStockCouvertureCompositionIndex",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("departements", django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), size=None)),
                ("years", django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ("percent_of_land", models.FloatField()),
                ("surface", models.FloatField()),
                ("percent_of_artif", models.FloatField()),
                ("millesime_index", models.IntegerField()),
                ("color", models.CharField()),
                ("label", models.CharField()),
                ("label_short", models.CharField()),
                ("couverture", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "public_data_landartifstockcouverturecompositionindex",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandArtifStockIndex",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("departements", django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), size=None)),
                ("years", django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ("surface", models.FloatField()),
                ("percent", models.FloatField()),
                ("millesime_index", models.IntegerField()),
                ("flux_surface", models.FloatField()),
                ("flux_percent", models.FloatField()),
                (
                    "flux_previous_years",
                    django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None),
                ),
            ],
            options={
                "db_table": "public_data_landartifstockindex",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandArtifStockUsageComposition",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("departement", models.CharField()),
                ("year", models.IntegerField()),
                ("percent_of_land", models.FloatField()),
                ("surface", models.FloatField()),
                ("percent_of_artif", models.FloatField()),
                ("millesime_index", models.IntegerField()),
                ("color", models.CharField()),
                ("label", models.CharField()),
                ("label_short", models.CharField()),
                ("usage", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "public_data_landartifstockusagecomposition",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandArtifStockUsageCompositionIndex",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                (
                    "land_type",
                    models.CharField(
                        choices=[
                            ("COMM", "Commune"),
                            ("EPCI", "EPCI"),
                            ("DEPART", "Département"),
                            ("SCOT", "SCoT"),
                            ("REGION", "Région"),
                            ("NATION", "Nation"),
                            ("COMP", "Composite"),
                        ]
                    ),
                ),
                ("departements", django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), size=None)),
                ("years", django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ("percent_of_land", models.FloatField()),
                ("surface", models.FloatField()),
                ("percent_of_artif", models.FloatField()),
                ("millesime_index", models.IntegerField()),
                ("color", models.CharField()),
                ("label", models.CharField()),
                ("label_short", models.CharField()),
                ("usage", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "public_data_landartifstockusagecompositionindex",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LandModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("land_id", models.CharField()),
                ("land_type", models.CharField()),
                ("name", models.CharField()),
                ("surface", models.FloatField()),
                ("surface_unit", models.CharField()),
                ("geom", django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ("simple_geom", django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ("surface_artif", models.FloatField()),
                ("percent_artif", models.FloatField()),
                (
                    "years_artif",
                    django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None),
                ),
                ("millesimes", django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), size=None)),
                (
                    "millesimes_by_index",
                    django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), size=None),
                ),
                (
                    "child_land_types",
                    django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), size=None),
                ),
                ("parent_keys", django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), size=None)),
                ("departements", django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), size=None)),
                ("is_interdepartemental", models.BooleanField()),
                ("has_ocsge", models.BooleanField()),
                ("has_zonage", models.BooleanField()),
            ],
            options={
                "db_table": "public_data_land",
                "managed": False,
            },
        ),
        migrations.RemoveField(
            model_name="usagesol",
            name="parent",
        ),
        migrations.RemoveField(
            model_name="communediff",
            name="city",
        ),
        migrations.RemoveField(
            model_name="communesol",
            name="city",
        ),
        migrations.RemoveField(
            model_name="communesol",
            name="matrix",
        ),
        migrations.RemoveField(
            model_name="couvertureusagematrix",
            name="couverture",
        ),
        migrations.RemoveField(
            model_name="couvertureusagematrix",
            name="usage",
        ),
        migrations.DeleteModel(
            name="CouvertureSol",
        ),
        migrations.DeleteModel(
            name="UsageSol",
        ),
        migrations.DeleteModel(
            name="CommuneDiff",
        ),
        migrations.DeleteModel(
            name="CommuneSol",
        ),
        migrations.DeleteModel(
            name="CouvertureUsageMatrix",
        ),
    ]
