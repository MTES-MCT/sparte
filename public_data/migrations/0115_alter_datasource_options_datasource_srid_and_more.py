# Generated by Django 4.2.7 on 2024-01-23 11:04

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("public_data", "0114_merge_0113_datasource_0113_merge_20240109_0833"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="datasource",
            options={"ordering": ["official_land_id", "millesimes", "name"]},
        ),
        migrations.AddField(
            model_name="datasource",
            name="srid",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="artificialarea",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="cerema",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="commune",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="datasource",
            name="dataset",
            field=models.CharField(
                choices=[
                    ("OCSGE", "Occupation du sol à grande échelle"),
                    ("MAJIC", "Mise A Jour des Informations Cadastrales"),
                ],
                max_length=255,
                verbose_name="Jeu de donnée",
            ),
        ),
        migrations.AlterField(
            model_name="datasource",
            name="mapping",
            field=models.JSONField(
                blank=True, help_text="A renseigner uniquement si le mapping n'est pas standard.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="datasource",
            name="millesimes",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.IntegerField(),
                blank=True,
                help_text="Séparer les années par une virgule si la donnée concerne plusieurs années",
                null=True,
                size=None,
                verbose_name="Année(s)",
            ),
        ),
        migrations.AlterField(
            model_name="datasource",
            name="name",
            field=models.CharField(
                choices=[
                    ("OCCUPATION_DU_SOL", "Couverture et usage du sol"),
                    ("DIFFERENCE", "Différence entre deux OCSGE"),
                    ("ZONE_CONSTRUITE", "Zone construite"),
                    ("CONSOMMATION_ESPACE", "Consommation d'espace"),
                ],
                help_text="Nom de la couche de données au sein du jeu de donnée",
                max_length=255,
                verbose_name="Nom",
            ),
        ),
        migrations.AlterField(
            model_name="datasource",
            name="official_land_id",
            field=models.CharField(
                blank=True,
                help_text="\n            ID officiel du territoire (code INSEE, SIREN, etc.) <br />\n            Peut-être vide si la donnée ne concerne pas un territoire spécifique\n            (par exemple, s'il concerne la France entière, ou un DROM-COM entier)\n        ",  # noqa: E501
                max_length=255,
                null=True,
                verbose_name="ID du territoire",
            ),
        ),
        migrations.AlterField(
            model_name="datasource",
            name="productor",
            field=models.CharField(
                choices=[
                    ("IGN", "Institut national de l'information géographique et forestière"),
                    (
                        "CEREMA",
                        "Centre d'études et d'expertise sur les risques, l'environnement, la mobilité et l'aménagement",  # noqa: E501
                    ),
                ],
                max_length=255,
                verbose_name="Producteur",
            ),
        ),
        migrations.AlterField(
            model_name="datasource",
            name="source_url",
            field=models.URLField(
                blank=True,
                help_text="Cet URL peut-être le même pour plusieurs sources (par exemple, si contenu dans archive zip)",  # noqa: E501
                null=True,
                verbose_name="URL de la source",
            ),
        ),
        migrations.AlterField(
            model_name="departement",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="epci",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="ocsge",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="ocsgediff",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="region",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="scot",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="zoneconstruite",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
        migrations.AlterField(
            model_name="zoneurba",
            name="srid_source",
            field=models.IntegerField(
                choices=[
                    (2154, "France Métropolitaine et Corse"),
                    (32620, "Guadeloupe et Martinique"),
                    (2972, "Guyane Française"),
                    (2975, "La réunion"),
                    (4326, "Monde (GPS)"),
                    (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                ],
                default=2154,
                verbose_name="SRID",
            ),
        ),
    ]
