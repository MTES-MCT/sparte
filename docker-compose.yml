version: "3.7"

services:
  db:
    image: kartoza/postgis:13-3.1--v2021.09.08
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - app-network

  app:
    build: .
    image: sparte/backend:latest
    # command: python manage.py runserver 0.0.0.0:8080
    # required to attach vsc to the container and run debug
    # command: tail -F anything
    # command: ["sh", "-c", "python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8080 --nothreading --noreload"]
    command: ["sh", "-c", "python /tmp/debugpy --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8080 --nothreading"]
    volumes:
      - .:/app
    env_file: .env
    environment:
      - DATABASE_URL=postgis://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SCALINGO_REDIS_URL=redis://redis:6379/0
    ports:
      - "5678:5678"
      - "8080:8080"
    depends_on:
      - db
      - redis
    networks:
      - app-network

  jupyter:
    image: sparte/backend:latest
    command: python manage.py shell_plus --notebook
    volumes:
      - .:/app
    env_file: .env
    environment:
      - DJANGO_ALLOW_ASYNC_UNSAFE=true
      - JUPYTER_CONFIG_DIR=/app/config/
      - DATABASE_URL=postgis://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SCALINGO_REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    ports:
      - 8888:8888
    networks:
      - app-network

  highchart:
    image: swannbm/scalingo-highcharts-export-server:13
    command: highcharts-export-server --enableServer 1 --port 8090
    ports:
      - "8090:8090"
    networks:
      - app-network

  worker-quick:
    image: sparte/backend:latest
    working_dir: /app
    volumes:
      - .:/app
    command: celery -A config.celery worker --loglevel debug --concurrency=4 --max-tasks-per-child=1
    # command: tail -F anything
    env_file: .env
    environment:
      - DATABASE_URL=postgis://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - HIGHCHART_SERVER=http://highchart:8090/
      - SCALINGO_REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - app-network

  worker-long:
    image: sparte/backend:latest
    working_dir: /app
    volumes:
      - .:/app
    command: celery -A config.celery worker --loglevel debug --concurrency=4 --max-tasks-per-child=1 -Q long
    # command: tail -F anything
    env_file: .env
    environment:
      - DATABASE_URL=postgis://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - HIGHCHART_SERVER=http://highchart:8090/
      - SCALINGO_REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - app-network

  worker-beat:
    image: sparte/backend:latest
    working_dir: /app
    volumes:
      - .:/app
    command: celery -A config.celery beat --loglevel=debug
    env_file: .env
    environment:
      - DATABASE_URL=postgis://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SCALINGO_REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - app-network

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=8887
    networks:
      - app-network
    ports:
      - 8887:8887


networks:
  app-network:
    driver: bridge

volumes:
  db_data:
