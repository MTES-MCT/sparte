version: "3.7"

services:
  db:
    image: kartoza/postgis:13-3.1--v2021.09.08
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - app-network

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: on-failure

  app:
    build: .
    # command: python manage.py runserver 0.0.0.0:8000
    # required to attach vsc to the container and run debug
    command: tail -F anything
    volumes:
      - .:/app
    env_file: .env
    # override a few environment variables to ensure it works with other containers
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - app-network

  worker:
    build: .
    working_dir: /app
    volumes:
      - .:/app
    # command: celery -A config.celery worker --loglevel=info
    command: tail -F anything
    env_file: .env
    depends_on:
      - db
      - redis
    networks:
      - app-network
    restart: on-failure

  worker-beat:
    build: .
    working_dir: /app
    command: celery -A config.celery beat --loglevel=info
    env_file: .env
    depends_on:
      - redis
    networks:
      - app-network
    restart: on-failure

  jupyter:
    build: .
    working_dir: /app
    command: python manage.py shell_plus --notebook
    env_file: .env
    volumes:
      - .:/app
    environment:
      - DJANGO_ALLOW_ASYNC_UNSAFE=true
      - JUPYTER_CONFIG_DIR=/app/config/
    depends_on:
      - db
    networks:
      - app-network
    ports:
      - "8888:8888"
    restart: on-failure

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
