name: 'Pull Request'

on:
  push:
    branches-ignore:
      - 'staging'
      - 'master'

env:
  ENVIRONMENT: local
  SECRET: ${{ secrets.SECRET }}
  DEBUG: 1
  ALLOWED_HOSTS: 127.0.0.1,localhost
  DOMAIN_URL: http://localhost:8080/
  EMAIL_ENGINE: local
  EMAIL_FILE_PATH: ${GITHUB_WORKSPACE}/emails
  HIGHCHART_SERVER: https://highcharts-export.osc-fr1.scalingo.io
  POSTGRES_DB: postgres
  CELERY_BROKER_URL: null
  CELERY_RESULT_BACKEND: null
  CELERY_TASK_ALWAYS_EAGER: null
  API_KEY_SENDINBLUE: null
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_LOCATION: ${{ secrets.AWS_LOCATION }}
  AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pre-commit/action@v3.0.1
        env:
          SKIP: ggshield
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pipenv'
      - run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - uses: nyurik/action-setup-postgis@v1
        id: pg
      - run: psql -c "ALTER ROLE postgres SUPERUSER;"
      - run: pipenv install --dev
      - run: pipenv run python manage.py test
        env:
          DATABASE_URL: ${{ steps.pg.outputs.connection-uri }}
