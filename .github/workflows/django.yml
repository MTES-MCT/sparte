name: Check all Python's linters

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  # build-and-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Use cache to check if rebuild is necessary
  #     id: cache-lock
  #     uses: actions/cache@v3
  #     with:
  #       path: .
  #       key: lock-${{ hashFiles('Pipfile.lock', 'packages.lock') }}
  #   - if: ${{ steps.cache-lock.outputs.cache-hit != 'true' }}
  #     name: Build and push Docker image
  #     run: |
  #       docker login -u swannbm -p ${{ secrets.DOCKERHUB_PASSWORD }}
  #       docker build -t swannbm/basesparte:latest .
  #       docker push swannbm/basesparte:latest

  linters:
    # needs: build-and-push
    runs-on: ubuntu-latest
    container:
      image: swannbm/basesparte:latest
    defaults:
      run:
        working-directory: /app
    steps:
    - uses: actions/checkout@v4
    - name: Move files to /app
      run: |
        echo "mv from $GITHUB_WORKSPACE to /app"
        mv $GITHUB_WORKSPACE/* /app
    - name: List files in the directory
      run: |
        pwd
        ls -alh
    - name: Check with Black
      run: black --check --include='\.py$' --exclude='/migrations/' .

    # - name: check black formatting
    #   run: pipenv run black --check --include="\.py" --exclude="env/*,0*" .

    # - name: check isort
    #   run: pipenv run isort . --check-only --skip env

    # - name: Run Tests
    #   run: |
    #     python manage.py test

    # - name: Run test suite
    #   run: |
    #     pipenv run test -svvv
    #   env:
    #     TEST_DB_HOST: localhost
    #     TEST_DB_NAME: postgres
    #     TEST_DB_PASS: postgres
    #     TEST_DB_PORT: 5432
    #     TEST_DB_USER: postgres

    # - name: Run linter
    #   run: |
    #     pipenv run lint

    # - name: Run formatting check
    #   run: |
    #     pipenv run format --check

    # - name: Setup node.js (for pyright)
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: "12"

    # - name: Run type checking
    #   run: |
    #     npm install -g pyright
    #     pipenv run typecheck
